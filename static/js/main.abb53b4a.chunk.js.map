{"version":3,"sources":["components/Section/Section.js","components/Fomr/Form.js","components/ContactList/ContactList.js","components/Search/Search.js","App.js","index.js"],"names":["Section","title","children","Form","state","name","inputNumer","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onAddName","this","onSubmit","type","pattern","required","placeholder","onChange","Component","ContactList","contacts","onRemoveContact","map","contact","number","onClick","id","Search","onHandleSearch","App","filter","addName","listName","uuidv4","includes","alert","prevState","getFilter","handleSearch","removeContact","filterredList","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb53b4a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    inputNumer: \"\",\n  };\n\n  handleChange = (event) => {\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    let { name, inputNumer } = this.state;\n    event.preventDefault();\n    this.props.onAddName(name, inputNumer);\n    this.setState({\n      name: \"\",\n      inputNumer: \"\",\n    });\n  };\n\n  render() {\n    let { name, inputNumer } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            placeholder=\"Name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"inputNumer\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={inputNumer}\n            placeholder=\"Number\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onAddName: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  inputNumer: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ol>\n      {contacts.map((contact) => (\n        <li key={contact.id}>\n          {`${contact.name} -`} {`tel: ${contact.number}   `}\n          <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n}\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Search({ value, onHandleSearch }) {\n  return (\n    <Fragment>\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search\"\n        onChange={onHandleSearch}\n      />\n    </Fragment>\n  );\n}\nSearch.propTypes = {\n  value: PropTypes.string.isRequired,\n  onHandleSearch: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Form from \"./components/Fomr/Form\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Search from \"./components/Search/Search\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      { id: \"id-5\", name: \"Roman\", number: \"227-91-27\" },\n    ],\n    filter: \"\",\n  };\n\n  addName = (name, inputNumer) => {\n    let listName = {\n      id: uuidv4(),\n      name: name,\n      number: inputNumer,\n    };\n\n    let contacts = this.state.contacts;\n    let namesList = contacts\n      .map((contact) => contact.name)\n      .includes(listName.name);\n\n    // console.log(namesList);\n\n    if (!namesList) {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, listName],\n        };\n      });\n    } else {\n      alert(`${listName.name} already in contacts`);\n    }\n  };\n\n  getFilter = () => {\n    let { contacts, filter } = this.state;\n    // console.log(contacts.filter((contact) => contact.name.includes(filter)));\n    return contacts.filter((contact) => contact.name.includes(filter));\n  };\n\n  handleSearch = (event) => {\n    this.setState({ filter: event.target.value });\n    this.getFilter();\n  };\n\n  removeContact = (id) => {\n    // console.log(id);\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\n      };\n    });\n  };\n\n  render() {\n    let { contacts, filter } = this.state;\n    let filterredList = this.getFilter();\n\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Form onAddName={this.addName} />\n          <Section title=\"Contacts\">\n            <Search onHandleSearch={this.handleSearch} value={filter} />\n\n            {filterredList.length === 0 ? (\n              <ContactList\n                onRemoveContact={this.removeContact}\n                contacts={contacts}\n              />\n            ) : (\n              <ContactList\n                onRemoveContact={this.removeContact}\n                contacts={filterredList}\n              />\n            )}\n          </Section>\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}